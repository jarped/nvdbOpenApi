# coding: utf-8

"""
    NVDB API LES V3

    API for å lese vegobjekter, vegnett og transaksjoner fra NVDB  # noqa: E501

    OpenAPI spec version: 0.0.1
    Contact: nvdb@vegvesen.no
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six
from swagger_client.models.vegobjekt_egenskap_base import VegobjektEgenskapBase  # noqa: F401,E501

class VegobjektEgenskapGeometri(VegobjektEgenskapBase):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'verdi': 'str',
        'kvalitet': 'GeometriKvalitet',
        'datafangstdato': 'date',
        'verifiseringsdato': 'date',
        'oppdateringsdato': 'date',
        'prosesshistorikk': 'str',
        'kommune': 'int',
        'medium': 'str',
        'medium_nvdb': 'int',
        'sosinavn': 'str',
        'temakode': 'int',
        'lengde': 'float',
        'hydereferanse': 'int'
    }
    if hasattr(VegobjektEgenskapBase, "swagger_types"):
        swagger_types.update(VegobjektEgenskapBase.swagger_types)

    attribute_map = {
        'verdi': 'verdi',
        'kvalitet': 'kvalitet',
        'datafangstdato': 'datafangstdato',
        'verifiseringsdato': 'verifiseringsdato',
        'oppdateringsdato': 'oppdateringsdato',
        'prosesshistorikk': 'prosesshistorikk',
        'kommune': 'kommune',
        'medium': 'medium',
        'medium_nvdb': 'medium_nvdb',
        'sosinavn': 'sosinavn',
        'temakode': 'temakode',
        'lengde': 'lengde',
        'hydereferanse': 'høydereferanse'
    }
    if hasattr(VegobjektEgenskapBase, "attribute_map"):
        attribute_map.update(VegobjektEgenskapBase.attribute_map)

    def __init__(self, verdi=None, kvalitet=None, datafangstdato=None, verifiseringsdato=None, oppdateringsdato=None, prosesshistorikk=None, kommune=None, medium=None, medium_nvdb=None, sosinavn=None, temakode=None, lengde=None, hydereferanse=None, *args, **kwargs):  # noqa: E501
        """VegobjektEgenskapGeometri - a model defined in Swagger"""  # noqa: E501
        self._verdi = None
        self._kvalitet = None
        self._datafangstdato = None
        self._verifiseringsdato = None
        self._oppdateringsdato = None
        self._prosesshistorikk = None
        self._kommune = None
        self._medium = None
        self._medium_nvdb = None
        self._sosinavn = None
        self._temakode = None
        self._lengde = None
        self._hydereferanse = None
        self.discriminator = None
        if verdi is not None:
            self.verdi = verdi
        if kvalitet is not None:
            self.kvalitet = kvalitet
        if datafangstdato is not None:
            self.datafangstdato = datafangstdato
        if verifiseringsdato is not None:
            self.verifiseringsdato = verifiseringsdato
        if oppdateringsdato is not None:
            self.oppdateringsdato = oppdateringsdato
        if prosesshistorikk is not None:
            self.prosesshistorikk = prosesshistorikk
        if kommune is not None:
            self.kommune = kommune
        if medium is not None:
            self.medium = medium
        if medium_nvdb is not None:
            self.medium_nvdb = medium_nvdb
        if sosinavn is not None:
            self.sosinavn = sosinavn
        if temakode is not None:
            self.temakode = temakode
        if lengde is not None:
            self.lengde = lengde
        if hydereferanse is not None:
            self.hydereferanse = hydereferanse
        VegobjektEgenskapBase.__init__(self, *args, **kwargs)

    @property
    def verdi(self):
        """Gets the verdi of this VegobjektEgenskapGeometri.  # noqa: E501

        WKT for egenskapen  # noqa: E501

        :return: The verdi of this VegobjektEgenskapGeometri.  # noqa: E501
        :rtype: str
        """
        return self._verdi

    @verdi.setter
    def verdi(self, verdi):
        """Sets the verdi of this VegobjektEgenskapGeometri.

        WKT for egenskapen  # noqa: E501

        :param verdi: The verdi of this VegobjektEgenskapGeometri.  # noqa: E501
        :type: str
        """

        self._verdi = verdi

    @property
    def kvalitet(self):
        """Gets the kvalitet of this VegobjektEgenskapGeometri.  # noqa: E501


        :return: The kvalitet of this VegobjektEgenskapGeometri.  # noqa: E501
        :rtype: GeometriKvalitet
        """
        return self._kvalitet

    @kvalitet.setter
    def kvalitet(self, kvalitet):
        """Sets the kvalitet of this VegobjektEgenskapGeometri.


        :param kvalitet: The kvalitet of this VegobjektEgenskapGeometri.  # noqa: E501
        :type: GeometriKvalitet
        """

        self._kvalitet = kvalitet

    @property
    def datafangstdato(self):
        """Gets the datafangstdato of this VegobjektEgenskapGeometri.  # noqa: E501


        :return: The datafangstdato of this VegobjektEgenskapGeometri.  # noqa: E501
        :rtype: date
        """
        return self._datafangstdato

    @datafangstdato.setter
    def datafangstdato(self, datafangstdato):
        """Sets the datafangstdato of this VegobjektEgenskapGeometri.


        :param datafangstdato: The datafangstdato of this VegobjektEgenskapGeometri.  # noqa: E501
        :type: date
        """

        self._datafangstdato = datafangstdato

    @property
    def verifiseringsdato(self):
        """Gets the verifiseringsdato of this VegobjektEgenskapGeometri.  # noqa: E501


        :return: The verifiseringsdato of this VegobjektEgenskapGeometri.  # noqa: E501
        :rtype: date
        """
        return self._verifiseringsdato

    @verifiseringsdato.setter
    def verifiseringsdato(self, verifiseringsdato):
        """Sets the verifiseringsdato of this VegobjektEgenskapGeometri.


        :param verifiseringsdato: The verifiseringsdato of this VegobjektEgenskapGeometri.  # noqa: E501
        :type: date
        """

        self._verifiseringsdato = verifiseringsdato

    @property
    def oppdateringsdato(self):
        """Gets the oppdateringsdato of this VegobjektEgenskapGeometri.  # noqa: E501


        :return: The oppdateringsdato of this VegobjektEgenskapGeometri.  # noqa: E501
        :rtype: date
        """
        return self._oppdateringsdato

    @oppdateringsdato.setter
    def oppdateringsdato(self, oppdateringsdato):
        """Sets the oppdateringsdato of this VegobjektEgenskapGeometri.


        :param oppdateringsdato: The oppdateringsdato of this VegobjektEgenskapGeometri.  # noqa: E501
        :type: date
        """

        self._oppdateringsdato = oppdateringsdato

    @property
    def prosesshistorikk(self):
        """Gets the prosesshistorikk of this VegobjektEgenskapGeometri.  # noqa: E501


        :return: The prosesshistorikk of this VegobjektEgenskapGeometri.  # noqa: E501
        :rtype: str
        """
        return self._prosesshistorikk

    @prosesshistorikk.setter
    def prosesshistorikk(self, prosesshistorikk):
        """Sets the prosesshistorikk of this VegobjektEgenskapGeometri.


        :param prosesshistorikk: The prosesshistorikk of this VegobjektEgenskapGeometri.  # noqa: E501
        :type: str
        """

        self._prosesshistorikk = prosesshistorikk

    @property
    def kommune(self):
        """Gets the kommune of this VegobjektEgenskapGeometri.  # noqa: E501


        :return: The kommune of this VegobjektEgenskapGeometri.  # noqa: E501
        :rtype: int
        """
        return self._kommune

    @kommune.setter
    def kommune(self, kommune):
        """Sets the kommune of this VegobjektEgenskapGeometri.


        :param kommune: The kommune of this VegobjektEgenskapGeometri.  # noqa: E501
        :type: int
        """

        self._kommune = kommune

    @property
    def medium(self):
        """Gets the medium of this VegobjektEgenskapGeometri.  # noqa: E501

        Se vegobjekttype 793, egenskap 9792 Medium  # noqa: E501

        :return: The medium of this VegobjektEgenskapGeometri.  # noqa: E501
        :rtype: str
        """
        return self._medium

    @medium.setter
    def medium(self, medium):
        """Sets the medium of this VegobjektEgenskapGeometri.

        Se vegobjekttype 793, egenskap 9792 Medium  # noqa: E501

        :param medium: The medium of this VegobjektEgenskapGeometri.  # noqa: E501
        :type: str
        """
        allowed_values = ["T", "B", "L", "U", "S", "O", "V", "D", "I", "W", "J", "X"]  # noqa: E501
        if medium not in allowed_values:
            raise ValueError(
                "Invalid value for `medium` ({0}), must be one of {1}"  # noqa: E501
                .format(medium, allowed_values)
            )

        self._medium = medium

    @property
    def medium_nvdb(self):
        """Gets the medium_nvdb of this VegobjektEgenskapGeometri.  # noqa: E501

        Se vegobjekttype 793, egenskap 9792 Medium, slik den er lagret i NVDB  # noqa: E501

        :return: The medium_nvdb of this VegobjektEgenskapGeometri.  # noqa: E501
        :rtype: int
        """
        return self._medium_nvdb

    @medium_nvdb.setter
    def medium_nvdb(self, medium_nvdb):
        """Sets the medium_nvdb of this VegobjektEgenskapGeometri.

        Se vegobjekttype 793, egenskap 9792 Medium, slik den er lagret i NVDB  # noqa: E501

        :param medium_nvdb: The medium_nvdb of this VegobjektEgenskapGeometri.  # noqa: E501
        :type: int
        """
        allowed_values = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]  # noqa: E501
        if medium_nvdb not in allowed_values:
            raise ValueError(
                "Invalid value for `medium_nvdb` ({0}), must be one of {1}"  # noqa: E501
                .format(medium_nvdb, allowed_values)
            )

        self._medium_nvdb = medium_nvdb

    @property
    def sosinavn(self):
        """Gets the sosinavn of this VegobjektEgenskapGeometri.  # noqa: E501


        :return: The sosinavn of this VegobjektEgenskapGeometri.  # noqa: E501
        :rtype: str
        """
        return self._sosinavn

    @sosinavn.setter
    def sosinavn(self, sosinavn):
        """Sets the sosinavn of this VegobjektEgenskapGeometri.


        :param sosinavn: The sosinavn of this VegobjektEgenskapGeometri.  # noqa: E501
        :type: str
        """

        self._sosinavn = sosinavn

    @property
    def temakode(self):
        """Gets the temakode of this VegobjektEgenskapGeometri.  # noqa: E501

        Se vegobjekttype 793, egenskap 9784 Temakode eller https://www.kartverket.no/standard/sosi/SOSI-koder/SOSI-koder.xls  # noqa: E501

        :return: The temakode of this VegobjektEgenskapGeometri.  # noqa: E501
        :rtype: int
        """
        return self._temakode

    @temakode.setter
    def temakode(self, temakode):
        """Sets the temakode of this VegobjektEgenskapGeometri.

        Se vegobjekttype 793, egenskap 9784 Temakode eller https://www.kartverket.no/standard/sosi/SOSI-koder/SOSI-koder.xls  # noqa: E501

        :param temakode: The temakode of this VegobjektEgenskapGeometri.  # noqa: E501
        :type: int
        """
        allowed_values = [7001, 7004, 7012, 7011, 7010, 7201, 7042, 7043, 7046, 6304]  # noqa: E501
        if temakode not in allowed_values:
            raise ValueError(
                "Invalid value for `temakode` ({0}), must be one of {1}"  # noqa: E501
                .format(temakode, allowed_values)
            )

        self._temakode = temakode

    @property
    def lengde(self):
        """Gets the lengde of this VegobjektEgenskapGeometri.  # noqa: E501


        :return: The lengde of this VegobjektEgenskapGeometri.  # noqa: E501
        :rtype: float
        """
        return self._lengde

    @lengde.setter
    def lengde(self, lengde):
        """Sets the lengde of this VegobjektEgenskapGeometri.


        :param lengde: The lengde of this VegobjektEgenskapGeometri.  # noqa: E501
        :type: float
        """

        self._lengde = lengde

    @property
    def hydereferanse(self):
        """Gets the hydereferanse of this VegobjektEgenskapGeometri.  # noqa: E501


        :return: The hydereferanse of this VegobjektEgenskapGeometri.  # noqa: E501
        :rtype: int
        """
        return self._hydereferanse

    @hydereferanse.setter
    def hydereferanse(self, hydereferanse):
        """Sets the hydereferanse of this VegobjektEgenskapGeometri.


        :param hydereferanse: The hydereferanse of this VegobjektEgenskapGeometri.  # noqa: E501
        :type: int
        """

        self._hydereferanse = hydereferanse

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(VegobjektEgenskapGeometri, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, VegobjektEgenskapGeometri):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
