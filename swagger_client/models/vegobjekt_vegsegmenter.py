# coding: utf-8

"""
    NVDB API LES V3

    API for å lese vegobjekter, vegnett og transaksjoner fra NVDB  # noqa: E501

    OpenAPI spec version: 0.0.1
    Contact: nvdb@vegvesen.no
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class VegobjektVegsegmenter(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'veglenkesekvensid': 'int',
        'relativ_posisjon': 'float',
        'startposisjon': 'float',
        'sluttposisjon': 'float',
        'lengde': 'float',
        'veglenke_type': 'str',
        'detaljniv': 'str',
        'type_veg': 'TypeVeg',
        'type_veg_sosi': 'TypeVegSosi',
        'startdato': 'date',
        'sluttdato': 'date',
        'geometri': 'VegobjektGeometri1',
        'fylke': 'int',
        'kommune': 'int',
        'vegsystemreferanse': 'Vegsystemreferanse'
    }

    attribute_map = {
        'veglenkesekvensid': 'veglenkesekvensid',
        'relativ_posisjon': 'relativPosisjon',
        'startposisjon': 'startposisjon',
        'sluttposisjon': 'sluttposisjon',
        'lengde': 'lengde',
        'veglenke_type': 'veglenkeType',
        'detaljniv': 'detaljnivå',
        'type_veg': 'typeVeg',
        'type_veg_sosi': 'typeVeg_Sosi',
        'startdato': 'startdato',
        'sluttdato': 'sluttdato',
        'geometri': 'geometri',
        'fylke': 'fylke',
        'kommune': 'kommune',
        'vegsystemreferanse': 'vegsystemreferanse'
    }

    def __init__(self, veglenkesekvensid=None, relativ_posisjon=None, startposisjon=None, sluttposisjon=None, lengde=None, veglenke_type=None, detaljniv=None, type_veg=None, type_veg_sosi=None, startdato=None, sluttdato=None, geometri=None, fylke=None, kommune=None, vegsystemreferanse=None):  # noqa: E501
        """VegobjektVegsegmenter - a model defined in Swagger"""  # noqa: E501
        self._veglenkesekvensid = None
        self._relativ_posisjon = None
        self._startposisjon = None
        self._sluttposisjon = None
        self._lengde = None
        self._veglenke_type = None
        self._detaljniv = None
        self._type_veg = None
        self._type_veg_sosi = None
        self._startdato = None
        self._sluttdato = None
        self._geometri = None
        self._fylke = None
        self._kommune = None
        self._vegsystemreferanse = None
        self.discriminator = None
        if veglenkesekvensid is not None:
            self.veglenkesekvensid = veglenkesekvensid
        if relativ_posisjon is not None:
            self.relativ_posisjon = relativ_posisjon
        if startposisjon is not None:
            self.startposisjon = startposisjon
        if sluttposisjon is not None:
            self.sluttposisjon = sluttposisjon
        if lengde is not None:
            self.lengde = lengde
        if veglenke_type is not None:
            self.veglenke_type = veglenke_type
        if detaljniv is not None:
            self.detaljniv = detaljniv
        if type_veg is not None:
            self.type_veg = type_veg
        if type_veg_sosi is not None:
            self.type_veg_sosi = type_veg_sosi
        if startdato is not None:
            self.startdato = startdato
        if sluttdato is not None:
            self.sluttdato = sluttdato
        if geometri is not None:
            self.geometri = geometri
        if fylke is not None:
            self.fylke = fylke
        if kommune is not None:
            self.kommune = kommune
        if vegsystemreferanse is not None:
            self.vegsystemreferanse = vegsystemreferanse

    @property
    def veglenkesekvensid(self):
        """Gets the veglenkesekvensid of this VegobjektVegsegmenter.  # noqa: E501


        :return: The veglenkesekvensid of this VegobjektVegsegmenter.  # noqa: E501
        :rtype: int
        """
        return self._veglenkesekvensid

    @veglenkesekvensid.setter
    def veglenkesekvensid(self, veglenkesekvensid):
        """Sets the veglenkesekvensid of this VegobjektVegsegmenter.


        :param veglenkesekvensid: The veglenkesekvensid of this VegobjektVegsegmenter.  # noqa: E501
        :type: int
        """

        self._veglenkesekvensid = veglenkesekvensid

    @property
    def relativ_posisjon(self):
        """Gets the relativ_posisjon of this VegobjektVegsegmenter.  # noqa: E501

        Relativ posisjon på veglenkesekvens dersom dette er et punkt  # noqa: E501

        :return: The relativ_posisjon of this VegobjektVegsegmenter.  # noqa: E501
        :rtype: float
        """
        return self._relativ_posisjon

    @relativ_posisjon.setter
    def relativ_posisjon(self, relativ_posisjon):
        """Sets the relativ_posisjon of this VegobjektVegsegmenter.

        Relativ posisjon på veglenkesekvens dersom dette er et punkt  # noqa: E501

        :param relativ_posisjon: The relativ_posisjon of this VegobjektVegsegmenter.  # noqa: E501
        :type: float
        """

        self._relativ_posisjon = relativ_posisjon

    @property
    def startposisjon(self):
        """Gets the startposisjon of this VegobjektVegsegmenter.  # noqa: E501

        Startposisjon på veglenkesekvens  # noqa: E501

        :return: The startposisjon of this VegobjektVegsegmenter.  # noqa: E501
        :rtype: float
        """
        return self._startposisjon

    @startposisjon.setter
    def startposisjon(self, startposisjon):
        """Sets the startposisjon of this VegobjektVegsegmenter.

        Startposisjon på veglenkesekvens  # noqa: E501

        :param startposisjon: The startposisjon of this VegobjektVegsegmenter.  # noqa: E501
        :type: float
        """

        self._startposisjon = startposisjon

    @property
    def sluttposisjon(self):
        """Gets the sluttposisjon of this VegobjektVegsegmenter.  # noqa: E501

        Sluttposisjon på veglenkesekvens  # noqa: E501

        :return: The sluttposisjon of this VegobjektVegsegmenter.  # noqa: E501
        :rtype: float
        """
        return self._sluttposisjon

    @sluttposisjon.setter
    def sluttposisjon(self, sluttposisjon):
        """Sets the sluttposisjon of this VegobjektVegsegmenter.

        Sluttposisjon på veglenkesekvens  # noqa: E501

        :param sluttposisjon: The sluttposisjon of this VegobjektVegsegmenter.  # noqa: E501
        :type: float
        """

        self._sluttposisjon = sluttposisjon

    @property
    def lengde(self):
        """Gets the lengde of this VegobjektVegsegmenter.  # noqa: E501

        Segmentets lengde  # noqa: E501

        :return: The lengde of this VegobjektVegsegmenter.  # noqa: E501
        :rtype: float
        """
        return self._lengde

    @lengde.setter
    def lengde(self, lengde):
        """Sets the lengde of this VegobjektVegsegmenter.

        Segmentets lengde  # noqa: E501

        :param lengde: The lengde of this VegobjektVegsegmenter.  # noqa: E501
        :type: float
        """

        self._lengde = lengde

    @property
    def veglenke_type(self):
        """Gets the veglenke_type of this VegobjektVegsegmenter.  # noqa: E501


        :return: The veglenke_type of this VegobjektVegsegmenter.  # noqa: E501
        :rtype: str
        """
        return self._veglenke_type

    @veglenke_type.setter
    def veglenke_type(self, veglenke_type):
        """Sets the veglenke_type of this VegobjektVegsegmenter.


        :param veglenke_type: The veglenke_type of this VegobjektVegsegmenter.  # noqa: E501
        :type: str
        """

        self._veglenke_type = veglenke_type

    @property
    def detaljniv(self):
        """Gets the detaljniv of this VegobjektVegsegmenter.  # noqa: E501


        :return: The detaljniv of this VegobjektVegsegmenter.  # noqa: E501
        :rtype: str
        """
        return self._detaljniv

    @detaljniv.setter
    def detaljniv(self, detaljniv):
        """Sets the detaljniv of this VegobjektVegsegmenter.


        :param detaljniv: The detaljniv of this VegobjektVegsegmenter.  # noqa: E501
        :type: str
        """

        self._detaljniv = detaljniv

    @property
    def type_veg(self):
        """Gets the type_veg of this VegobjektVegsegmenter.  # noqa: E501


        :return: The type_veg of this VegobjektVegsegmenter.  # noqa: E501
        :rtype: TypeVeg
        """
        return self._type_veg

    @type_veg.setter
    def type_veg(self, type_veg):
        """Sets the type_veg of this VegobjektVegsegmenter.


        :param type_veg: The type_veg of this VegobjektVegsegmenter.  # noqa: E501
        :type: TypeVeg
        """

        self._type_veg = type_veg

    @property
    def type_veg_sosi(self):
        """Gets the type_veg_sosi of this VegobjektVegsegmenter.  # noqa: E501


        :return: The type_veg_sosi of this VegobjektVegsegmenter.  # noqa: E501
        :rtype: TypeVegSosi
        """
        return self._type_veg_sosi

    @type_veg_sosi.setter
    def type_veg_sosi(self, type_veg_sosi):
        """Sets the type_veg_sosi of this VegobjektVegsegmenter.


        :param type_veg_sosi: The type_veg_sosi of this VegobjektVegsegmenter.  # noqa: E501
        :type: TypeVegSosi
        """

        self._type_veg_sosi = type_veg_sosi

    @property
    def startdato(self):
        """Gets the startdato of this VegobjektVegsegmenter.  # noqa: E501


        :return: The startdato of this VegobjektVegsegmenter.  # noqa: E501
        :rtype: date
        """
        return self._startdato

    @startdato.setter
    def startdato(self, startdato):
        """Sets the startdato of this VegobjektVegsegmenter.


        :param startdato: The startdato of this VegobjektVegsegmenter.  # noqa: E501
        :type: date
        """

        self._startdato = startdato

    @property
    def sluttdato(self):
        """Gets the sluttdato of this VegobjektVegsegmenter.  # noqa: E501


        :return: The sluttdato of this VegobjektVegsegmenter.  # noqa: E501
        :rtype: date
        """
        return self._sluttdato

    @sluttdato.setter
    def sluttdato(self, sluttdato):
        """Sets the sluttdato of this VegobjektVegsegmenter.


        :param sluttdato: The sluttdato of this VegobjektVegsegmenter.  # noqa: E501
        :type: date
        """

        self._sluttdato = sluttdato

    @property
    def geometri(self):
        """Gets the geometri of this VegobjektVegsegmenter.  # noqa: E501


        :return: The geometri of this VegobjektVegsegmenter.  # noqa: E501
        :rtype: VegobjektGeometri1
        """
        return self._geometri

    @geometri.setter
    def geometri(self, geometri):
        """Sets the geometri of this VegobjektVegsegmenter.


        :param geometri: The geometri of this VegobjektVegsegmenter.  # noqa: E501
        :type: VegobjektGeometri1
        """

        self._geometri = geometri

    @property
    def fylke(self):
        """Gets the fylke of this VegobjektVegsegmenter.  # noqa: E501


        :return: The fylke of this VegobjektVegsegmenter.  # noqa: E501
        :rtype: int
        """
        return self._fylke

    @fylke.setter
    def fylke(self, fylke):
        """Sets the fylke of this VegobjektVegsegmenter.


        :param fylke: The fylke of this VegobjektVegsegmenter.  # noqa: E501
        :type: int
        """

        self._fylke = fylke

    @property
    def kommune(self):
        """Gets the kommune of this VegobjektVegsegmenter.  # noqa: E501


        :return: The kommune of this VegobjektVegsegmenter.  # noqa: E501
        :rtype: int
        """
        return self._kommune

    @kommune.setter
    def kommune(self, kommune):
        """Sets the kommune of this VegobjektVegsegmenter.


        :param kommune: The kommune of this VegobjektVegsegmenter.  # noqa: E501
        :type: int
        """

        self._kommune = kommune

    @property
    def vegsystemreferanse(self):
        """Gets the vegsystemreferanse of this VegobjektVegsegmenter.  # noqa: E501


        :return: The vegsystemreferanse of this VegobjektVegsegmenter.  # noqa: E501
        :rtype: Vegsystemreferanse
        """
        return self._vegsystemreferanse

    @vegsystemreferanse.setter
    def vegsystemreferanse(self, vegsystemreferanse):
        """Sets the vegsystemreferanse of this VegobjektVegsegmenter.


        :param vegsystemreferanse: The vegsystemreferanse of this VegobjektVegsegmenter.  # noqa: E501
        :type: Vegsystemreferanse
        """

        self._vegsystemreferanse = vegsystemreferanse

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(VegobjektVegsegmenter, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, VegobjektVegsegmenter):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
